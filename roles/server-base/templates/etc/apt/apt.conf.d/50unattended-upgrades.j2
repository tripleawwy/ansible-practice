// {{ ansible_managed }}

Unattended-Upgrade::Origins-Pattern {
{% for origin in unattended_origins_patterns %}
    "{{ origin }}";
{% endfor %}
};

Unattended-Upgrade::Package-Blacklist {
{% for package in unattended_package_blacklist %}
    "{{package}}";
{% endfor %}
};

// Automatically run "dpkg --force-confold --configure -a".
Unattended-Upgrade::AutoFixInterruptedDpkg "{{ unattended_autofix_interrupted_dpkg }}";

// Split the upgrade into the smallest possible chunks
Unattended-Upgrade::MinimalSteps "{{ unattended_minimal_steps }}";

// Install upgrades when the machine is shuting down instead of doing it in the background.
Unattended-Upgrade::InstallOnShutdown "{{ unattended_install_on_shutdown }}";

// Enable mail notifications
Unattended-Upgrade::Mail "{{ unattended_mail }}";
Unattended-Upgrade::MailOnlyOnError "{{ unattended_mail_only_on_error }}";

// Automatically run "apt-get autoremove" after upgrade
Unattended-Upgrade::Remove-Unused-Dependencies "{{ unattended_remove_unused_dependencies }}";

// Automatically reboot if the file /var/run/reboot-required is found after the upgrade.
Unattended-Upgrade::Automatic-Reboot "{{ unattended_automatic_reboot }}";

// Automatically reboot even if there are users currently logged in.
Unattended-Upgrade::Automatic-Reboot-WithUsers "{{ unattended_automatic_reboot_with_users }}";

// If automatic reboot is enabled and needed, reboot at the specific time.
Unattended-Upgrade::Automatic-Reboot-Time "{{ unattended_automatic_reboot_time }}";

// If true, unattended-upgrades will upgrade packages that require restart after an upgrade
Unattended-Upgrade::IgnoreAppsRequireRestart "{{ unattended_ignore_apps_require_restart }}";

